// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xphyrus.NexusAPI.Data;

#nullable disable

namespace Xphyrus.NexusAPI.Migrations
{
    [DbContext(typeof(ApplicatioDbContext))]
    [Migration("20231126071718_qww")]
    partial class qww
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodingAssesment", b =>
                {
                    b.Property<string>("CodingAssesmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JoinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodingAssesmentId");

                    b.ToTable("Assesments");
                });

            modelBuilder.Entity("Xphyrus.AssesmentAPI.Models.AssesmentAdmins", b =>
                {
                    b.Property<string>("AssesmentAdminsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssesmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasResultDeclared")
                        .HasColumnType("bit");

                    b.HasKey("AssesmentAdminsId");

                    b.ToTable("AssesmentAdmins");
                });

            modelBuilder.Entity("Xphyrus.AssesmentAPI.Models.AssesmentParticipant", b =>
                {
                    b.Property<string>("AssesmentParticipantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssesmentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("HasStarted")
                        .HasColumnType("bit");

                    b.HasKey("AssesmentParticipantId");

                    b.ToTable("AssesmentParticipants");
                });

            modelBuilder.Entity("Xphyrus.AssesmentAPI.Models.EvaluationCase", b =>
                {
                    b.Property<string>("EvaluationCaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Input")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Output")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EvaluationCaseId");

                    b.HasIndex("CodingId");

                    b.ToTable("EvliationCases");
                });

            modelBuilder.Entity("Xphyrus.AssesmentAPI.Models.EvaluationCase", b =>
                {
                    b.HasOne("CodingAssesment", "Coding")
                        .WithMany("EvaluationCases")
                        .HasForeignKey("CodingId");

                    b.Navigation("Coding");
                });

            modelBuilder.Entity("CodingAssesment", b =>
                {
                    b.Navigation("EvaluationCases");
                });
#pragma warning restore 612, 618
        }
    }
}
